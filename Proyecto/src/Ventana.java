/**
* Proyecto - Fundamentos de Análisis y Diseño de Algoritmos
*
* Integrantes: 
* Jhonier Andrés Calero Rodas   1424599
* Fabio Andrés Castañeda Duarte 1424386
* Juan Pablo Moreno Muñoz       1423437
* Joan Manuel Tovar Guzmán      1423124
* 
* Archivo: Archivo.java 
* Fecha de entrega: 19/07/2016
* Universidad del Valle 
* FADA
* EISC
* 
* Clase : Ventana
* Responsabilidad : Realizar el manejo de la interfaz gráfica del programa
* funcionalidades de todos los botones y diseño de la misma.
*  
*/

import java.io.*;
import java.text.*;
import java.util.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


public class Ventana extends javax.swing.JFrame {

    
    Cosecha cosechador; // Se crea una instancia de la clase Cosecha
    
    //Boolean que nos indica si se leyeron los datos del archivo txt
    boolean seCargaronDatos = false;
    
    public Ventana() {
        super("Cosecha"); 
        cosechador = new Cosecha(); // Se inicializa el objeto de la clase cosecha
        
        initComponents(); // Se inicializan los componentes de la interfaz
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        BCargar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        LabVoraz = new javax.swing.JLabel();
        BVoraz = new javax.swing.JButton();
        LabDinamica = new javax.swing.JLabel();
        BDinamica = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTAInfo = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTAResultados = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        JMenuArchivo = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        JMenuItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        JMenuItemAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BCargar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BCargar.setText("Cargar");
        BCargar.setMaximumSize(new java.awt.Dimension(85, 25));
        BCargar.setMinimumSize(new java.awt.Dimension(85, 25));
        BCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCargarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Cargar archivo");

        LabVoraz.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabVoraz.setText("Resolver por programación voraz");

        BVoraz.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BVoraz.setText("Resolver");
        BVoraz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BVorazActionPerformed(evt);
            }
        });

        LabDinamica.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabDinamica.setText("Resolver por programación dinámica");

        BDinamica.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BDinamica.setText("Resolver");
        BDinamica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDinamicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(BDinamica))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(LabDinamica))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(BCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(LabVoraz)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(BVoraz)
                        .addGap(99, 99, 99))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(LabVoraz)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BVoraz, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(LabDinamica, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BDinamica, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        JTAInfo.setEditable(false);
        JTAInfo.setColumns(20);
        JTAInfo.setRows(5);
        jScrollPane1.setViewportView(JTAInfo);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Información");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(372, 372, 372)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        JTAResultados.setEditable(false);
        JTAResultados.setColumns(20);
        JTAResultados.setRows(5);
        jScrollPane2.setViewportView(JTAResultados);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Resultados");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        JMenuArchivo.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cleanImage.png"))); // NOI18N
        jMenuItem1.setText("Limpiar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        JMenuArchivo.add(jMenuItem1);

        JMenuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        JMenuItemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exitImage.png"))); // NOI18N
        JMenuItemSalir.setText("Salir");
        JMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuItemSalirActionPerformed(evt);
            }
        });
        JMenuArchivo.add(JMenuItemSalir);

        jMenuBar1.add(JMenuArchivo);

        jMenu2.setText("Ayuda");

        JMenuItemAcercaDe.setText("Acerca de...");
        JMenuItemAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuItemAcercaDeActionPerformed(evt);
            }
        });
        jMenu2.add(JMenuItemAcercaDe);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_JMenuItemSalirActionPerformed

    private void BCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCargarActionPerformed
        Archivo miArchivo = new Archivo(); // Se crea una instancia de la clase archivo
        
        String infoArchivo; // String que contiene la información brindada en el .txt
        String infoJTA; // String que almacena la información que se mostrará en el JTAinfo
        infoArchivo = miArchivo.abrirArchivo(); //Se cargan los numeros del archivo al array de la clase Ventana en un string
        JTAResultados.setText("");
        
        // Si el string que contiene la información del archivo está vacío
        if(infoArchivo.equals("")){
            // Se imrpime en el JTAinfo que hubo un error al leer el archivo
            JTAInfo.setText("Error al leer el archivo.");
        }
        // Si no
        else{
            int error = cosechador.setValores(infoArchivo); // Se llama el método que se encarga de asignar los datos del 
                                                            // problema planteado a las variables correspondientes en la
                                                            // clase Cosecha
            // Si no hubo ningún error
            if(error == 0){
                infoJTA = cosechador.datosCargados(); // Se llama el método que devuelve un string con los datos que
                                                      // fueron cargados
                JTAInfo.setText(infoJTA); // Se muestra en el JTextArea la información cargada
                seCargaronDatos = true; // Se asigna el valor true a la variable que verifica que se cargaron los datos
                
                // Se imprime en pantalla un mensaje donde se afirma la carga de los datos
                JOptionPane.showMessageDialog(null, "Se cargaron los datos correctamente");
            }
            // Si hubo algún error, se muestra un mensaje en pantalla indicando que hubo un error.
            else{
                JTAInfo.setText("Error.\nLos datos no están escritos de manera legible.");
            }
            
        }
        
        
    }//GEN-LAST:event_BCargarActionPerformed

    private void BVorazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BVorazActionPerformed
        long TInicio, TFin, tiempo; //Para medir el tiempo que dura la ejecución del algoritmo.
        double segundos; // Para almacenar el tiempo de ejecución en segundos
        // Se define un formato para la representación de los decimales
        DecimalFormat formater = new DecimalFormat("#.#####");
        
        // Si la variable que verifica la carga de los datos no es true, entonces se imprime
        // un mensaje indicando que primero se debe hacer la carga de los datos
        if(!seCargaronDatos){
            JOptionPane.showMessageDialog(rootPane, "Primero debe cargar los datos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        // Si la variable es true
        else{
            // Se asigna a la variable TInicio el tiempo actual del sistema
             TInicio = System.nanoTime();
            
            // Se hace el llamado al método que se encarga de solucionar el problema mediante la estrategia voraz 
            cosechador.resolverVoraz();
            // Se indica que el problema fue resuelto.
            String infoCosecha = "Se resolvió el problema por método voraz";
            // Se obtiene la información de la solución dada y se asigna al string infoCosecha
            infoCosecha += "\n******************\n" + cosechador.infoCosecha();
                                 
            // Se asigna a la variable TFin el tiempo actual del sistema
            TFin = System.nanoTime();
            
            tiempo = TFin - TInicio; // Se calcula el tiempo de ejecución mediante la resta de TFin y Tinicio
            // Se calcula el tiempo de ejecución en segundos, dado que el tiempo del sistema está en nanosegundos.
            segundos = ( (double) tiempo/1000000000);
             
            // Si el string que contiene la información de la solución es "**", entonces hubo un error
            // en la resolución del problema.
            if(infoCosecha.equalsIgnoreCase("**")){
                JTAResultados.setText("Error.\nTiempo de ejecución: "+formater.format(segundos)+" segundos");
            }
            // Si no
            else{
                // Se muestran los resultados en el JTextArea definido para esto, además también se muestra el tiempo
                // de ejecución para la solución del problema
                JTAResultados.setText(infoCosecha+"\nTiempo de ejecución: "+formater.format(segundos)+" segundos");
                
                // Se indica que se obtuvieron los resultados
                JOptionPane.showMessageDialog(null, "Resultados obtenidos");
                
                // Se ubica el cursor del JTextArea en la parte superior, pues por defecto queda en la parte inferior
                JTAResultados.setCaretPosition(0);   
                // Se crea un nuevo objeto de la clase archivo - miArchivo
                Archivo miArchivo = new Archivo();
                // Se llama el método que se encarga de escribir los resultados en un archivo, se le pasa el
                // nombre de la estrategia (Voraz) y el string que contiene los resultados.
                miArchivo.escribirResultados("Voraz", cosechador.resultadosCosechaArchivo());
            }
            
        }
    }//GEN-LAST:event_BVorazActionPerformed

    private void BDinamicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDinamicaActionPerformed
        long TInicio, TFin, tiempo; //Para medir el tiempo que dura la ejecución del algoritmo.
        double segundos; // Para almacenar el tiempo de ejecución en segundos
        // Se define un formato para la representación de los decimales
        DecimalFormat formater = new DecimalFormat("#.#####");
        
        // Si la variable que verifica la carga de los datos no es true, entonces se imprime
        // un mensaje indicando que primero se debe hacer la carga de los datos
        if(!seCargaronDatos){
            JOptionPane.showMessageDialog(rootPane, "Primero debe cargar los datos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        // Si la variable es true
        else{
            // Se asigna a la variable TInicio el tiempo actual del sistema
             TInicio = System.nanoTime();
            
            // Se hace el llamado al método que se encarga de solucionar el problema mediante la estrategia dinámica
            cosechador.resolverDinamica();
            // Se indica que el problema fue resuelto.
            String infoCosecha = "Se resolvio el problema por método dinámica";
            // Se obtiene la información de la solución dada y se asigna al string infoCosecha
            infoCosecha += "\n******************\n" + cosechador.infoCosecha();
             
            // Se asigna a la variable TFin el tiempo actual del sistema
             TFin = System.nanoTime();
             
             tiempo = TFin - TInicio; // Se calcula el tiempo de ejecución mediante la resta de TFin y Tinicio
             // Se calcula el tiempo de ejecución en segundos, dado que el tiempo del sistema está en nanosegundos.
             segundos = ( (double) tiempo/1000000000);
             
            // Si el string que contiene la información de la solución es "**", entonces hubo un error
            // en la resolución del problema. 
            if(infoCosecha.equalsIgnoreCase("**")){
                JTAResultados.setText("Error.\nTiempo de ejecución: "+formater.format(segundos)+" segundos");
            }
            // Si no
            else{
     
                // Se muestran los resultados en el JTextArea definido para esto, además también se muestra el tiempo
                // de ejecución para la solución del problema
                JTAResultados.setText(infoCosecha+"\nTiempo de ejecución: "+formater.format(segundos)+" segundos");
                
                 // Se indica que se obtuvieron los resultados
                JOptionPane.showMessageDialog(null, "Resultados obtenidos");
                
                // Se ubica el cursor del JTextArea en la parte superior, pues por defecto queda en la parte inferior
                JTAResultados.setCaretPosition(0);   
                
                // Se crea un objeto de la clase archivo - miArchivo
                Archivo miArchivo = new Archivo();
                // Se llama el método que se encarga de escribir los resultados en un archivo, se le pasa el
                // nombre de la estrategia (Dinámica) y el string que contiene los resultados.
                miArchivo.escribirResultados("Dinamica", cosechador.resultadosCosechaArchivo());
            }
            
        }
    }//GEN-LAST:event_BDinamicaActionPerformed

    private void JMenuItemAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuItemAcercaDeActionPerformed
        // Se muestra la información referente a los desarrolladores de la aplicación
        JOptionPane.showMessageDialog(null, "Fundamentos De Análisis y Diseño de Algoritmos\nEste programa fue hecho "
            + "exclusivamente con fines académicos\n"
            + "Escuela de Ingeniería de sistemas - Univalle\n"
            + "Fabio Andrés Castañeda Duarte - 1424386\n"
            + "Joan Manuel Tovar Guzmán - 1423124\n"
            + "Jhonier Andrés Calero Rodas - 1424599\n"
            + "Juan Pablo Moreno Muñoz - 1423437", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_JMenuItemAcercaDeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Se limpia el area de texto de los resultados
        JTAResultados.setText("");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    /*Nimbus lookAnFeel*/
                    //javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
                    
                    /* Windows LookAndFeel */
                    //javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    
                    /* Metal LookAndFeel */
                    javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
                    
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true); // Se permite la visibilidad de la ventana
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCargar;
    private javax.swing.JButton BDinamica;
    private javax.swing.JButton BVoraz;
    private javax.swing.JMenu JMenuArchivo;
    private javax.swing.JMenuItem JMenuItemAcercaDe;
    private javax.swing.JMenuItem JMenuItemSalir;
    private javax.swing.JTextArea JTAInfo;
    private javax.swing.JTextArea JTAResultados;
    private javax.swing.JLabel LabDinamica;
    private javax.swing.JLabel LabVoraz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
